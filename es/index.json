[{"content":"Aquí voy a escribir el artículo que me gustaría haber leído cuando empecé a escribir RFCs en mi trabajo. Empezaré dando algunas razones para escribir RFCs, y luego hablaré sobre mi proceso actual y una [plantilla] que puedes usar.\nEste artículo no es para nada una especificación formal de cómo redactar RFCs. Como mucho es un sistema flexible que me ha resultado útil en los últimos 2 o 3 años. Me tomó un rato entender el valor de los RFCs, mas ahora los considero una herramienta valiosa. Si ya eres una experta en RFCs, tal vez encuentres aquí una perspectiva diferente, y si tienes algún consejo para mí, ¡por favor cuéntamelo! Si nunca has escrito un RFC, espero que al final de este artículo sientas que vale la pena el esfuerzo y les des una oportunidad pronto.\nEspera un momento - qué es un RFC? RFC significa \u0026ldquo;Request for Comments\u0026rdquo;, o \u0026ldquo;Petición de Comentario\u0026rdquo;, en español. Es un documento estructurado escrito en lenguaje natural donde se explica una propuesta. La mayoría de veces, dichas propuestas son técnicas, pero un RFC bien podría ser usado para proponer otros cambios, como por ejemplo en un proceso de tu organización.\n¿Por qué? He identificado 3 beneficios principales de los RFCs. Cada uno está relacionado con una fase general del proceso de toma de decisiones: el antes, el durante, y el después. Para resumir, me gusta que incentivan un análisis previo del cambio y su impacto, fomentan la colaboración asíncrona y las discusiones serias y pausadas, y sirven como referencia futura para entender cómo y por qué la decisión fue tomada.\nEn una organización saludable, todo esto debería conducir a que gastes menos tiempo que si te metieras de lleno a escribir código desde el principio. Suena contra-intuitivo, pero después de dedicarle tiempo a escribir un buen RFC, el camino a seguir debería ser más claro y transitable.\nEl antes: Análisis previo La escritura de un RFC comienza con una exploración meticulosa de los espacios del problema y la solución (es decir, la definición del problema y el conjunto de posibles soluciones). El peroblema puede haber sido descubierto por tí (por ejemplo, que el rendimiento de una consulta de base de datos ejecutada frecuentemente se haya degradado), o te pudo haber sido asignado para que lo investigues (como un nuevo caso de uso que el producto en el cual trabajas debe tener en cuenta). Sea cual sea el escenario, el problema en sí, así como los requisitos que surjan de éste deben ser desglosados.\nEsta descripción del problema y los requisitos (tanto funcionales como no funcionales) serán de ayuda al momento de analizar las diferentes alternativas para resolverlo. Éstos restringen el espacio de la solución, llevándote hacia la solución óptima (aún cuando esta no sea la \u0026ldquo;ideal\u0026rdquo;).\nLuego, es esencial identificar los coautores, colaboradores e interesados, así como tu audiencia.\n Los coautores trabajarán junto a ti en la elaboración del RFC, haciéndose cargo de partes de él o compartiendo toda la responsabilidad contigo. Los colaboradores son personas que pueden ayudarte discutiendo ideas contigo o guiándote. Por ejemplo, una compañera responsable de un subsistema con el que tu código deberá interactuar, o un miembro del equipo de producto que pueda ayudarte a entender ciertos casos de uso. At this point, it\u0026rsquo;s essential to identify co-authors, collaborators, stakeholders, and your audience. Un interesado es cualquier persona que se pueda ver impactada por la potencial implementación de tu RFC. Es un grupo naturalmente \u0026ldquo;abierto\u0026rdquo; que puede incluir colegas que deberán re-priorizar su trabajo, sus managers o incluso clientes que están a la espera de una nueva funcionalidad. Tu audiencia es quien sea que lea tu RFC. Es decir, cualquiera cuyos comentarios u opiniones quieras recibir. Debes identificarla tan pronto como sea posible, ya que definirá casi todos los aspectos de tu RFC: tu estilo al escribirlo (ej. serio o informal), el tipo y la cantidad de material auxiliar que debas incluir (como diagramas, pedazos de código, prototipos de los cambios en la UI, etc.). Si no logras establecer quiénes forman tu audiencia, será más difícil obtener sugerencias de buena calidad. Una señal común de que debes revaluar quiénes la conforman es si empiezas a recibir comentarios indicando que debes dar más contexto en alguna parte, o que debes explicar algo mejor. En estos casos tu reacción no debe ser nunca excluir a las personas haciendo estos comentarios, sino identificar su posición y adaptar tu RFC para que sea más digerible para ellos.  Identificar estos cuatro grupos ayuda muchísimo a reducir tanto la magnitud del riesgo como los diferentes tipos de riesgo asociados con tu propuesta.\nLa primera dimensión de riesgo es la de utilización de recursos. Después de haber trabajado concienzudamente en tu RFC, si es aprobado, entenderás mejor qué se necesita hacer, quiénes lo harán, y cuánto tiempo tomará. Por otro lado, si esrechazado, no habrás desperdiciado tu valioso tiempo trabajando en un proyecto potencialmente complicado sólo para darte cuenta que no iba a funcionar. Se podría decir que nuestro trabajo como programadores no es escribir tanto código como sea posible, sino minimizar la cantidad de código escrito.\nLa segunda dimensión es la gestión del cambio. Tu propuesta inevitablemente afectará el sistema que modifica. Pensar profundamente en el problema y su solución te ayudará a ver cómo la implementación de tu RFC impactará otros componentes y usuarios, facilitando la ideación de una estrategia de migración.\nLa tercera es el impacto en las personas. Si te encuentras escribiendo un RFC, lo más probable es que el problema al que te enfrentas no sea trivial. Como lo dije antes, es posible que su implementación requiera cambios en otros sistemas, así como un plan para desplegarlos (o un plan de migración).Esto significa que tendrás que obtener la aprobación de las personas responsables de dichos sistemas. Los RFCs suponen un excelente espacio para colaborar con ellas hasta que lleguen a un consenso. Si tienen alguna duda, puedes contextualizar mejor tu propuesta para hacerla más clara. Si encuentran un defecto en la solución, puedes tratar de encontrar una alternativa mejor. Cuando todas las personas relevantes hayan aprobado tu RFC, entenderán claramente su rol (o el rol de su equipo) en su implementación, y podrán planear su trabajo según lo requieran.\nDurante: Colaboración (asíncrona) Algunos RFCs son simples: todos conocen el problema, la solución resulta ser de alcance limitado y el plan de ejecución es claro. Otros, sin embargo, son complejos y necesitan que varias personas colaboren escribiéndolo y revisándolo. En esas ocasiones, reunirse con todos en una videollamada suele ser un método ineficiente de recopilar opiniones e ideas. La forma óptima de escribir y revisar RFCs es con herramientas que fomenten la comunicación asíncrona.\nSi estás escribiendo el documento junto a alguien más, pueden contribuir a él en los momentos del día en que sean más productivos. De hecho, trabajar en RFCs suele ser un ciclo de escribir, alejarse para pensar y examinar opciones, dibujar diagramas, leer código y otros RFCs y esbozar soluciones. Por lo tanto, sincronizar múltiples personas para que siempre estén en las mismas fases es casi imposible.\nPara quienes revisen el RFC, un patrón asíncrono de comunicación les da tiempo de leer todo el documento, tomar notas y pensar en sugerencias y preguntas valiosas. Esta es una alternativa mejor a obligar a alguien a formular opiniones y preguntas en un instante. También, como autor, te permite reflexionar sin afán sobre los comentarios hasta el momento, para evitar malos entendidos y el spam. Si quienes están participando en la sección de comentarios del documento perciben que hay demasiados comentarios cortos (como si fuera un chat en tiempo real), probablemente la ignoren totalmente.\nAsimismo, los RFCs desacoplan la definición de la ejecución. Los autores no tienen que ser necesariamente quienes implementen la solucion descrita en el documento, reduciendo el bus factor en el equipo. Por ejemplo, piensa en un escenario donde no se escribió ningún RFC, y la persona a cargo de solucionar el problema cambia de equipo o se va de la empresa. Normalmente, leer (en algunos casos, descifrar) el código que dejaron toma mucho más tiempo.\nDespués: Referencia futura Luego de haber implementado el RFC, éste seguirá siendo un recurso invaluable, ya que alguien que tenga preguntas sobre por qué las cosas se hicieron de cierta forma podrá referirse a él. ¡A veces, incluso la respuesta a por qué fueron hechas las cosas, independientemente del cómo, no es para nada clara tampoco!\nEn una industria tan dinámica (para ponerlo en términos suaves), seguramente en el transcurso de algunos meses algunos de tus colegas cambiarán de equipo o se irán de tu empresa. ¡Y eventualmente tú también lo harás! Entrar a un equipo que tiene una colección de RFCs bien escritos describiendo las partes más importantes del sistema es un alivio.\nOtro efecto secundario menor (pero importante) de todo esto es facilitar que las personas que entren a la empresa empaticen con las personas que llevan más tiempo. Es fácil juzgar a alguien cuando encuentras una parte del código que contribuyeron y que no entiendes o que no cumple con los estándares que esperarías. El código \u0026ldquo;feo\u0026rdquo; no debería evaluarse sin contexto, y los RFCs ayudan en esos casos. Por ejemplo, si los requisitos fueron documentados, podrían decir mucho del trasfondo en el cual el código fue escrito, así como de las circunstancias que rigieron la implementación\n","permalink":"http://0x5d.github.io/es/es/posts/rfcs/","summary":"Aquí voy a escribir el artículo que me gustaría haber leído cuando empecé a escribir RFCs en mi trabajo. Empezaré dando algunas razones para escribir RFCs, y luego hablaré sobre mi proceso actual y una [plantilla] que puedes usar.\nEste artículo no es para nada una especificación formal de cómo redactar RFCs. Como mucho es un sistema flexible que me ha resultado útil en los últimos 2 o 3 años. Me tomó un rato entender el valor de los RFCs, mas ahora los considero una herramienta valiosa.","title":"Sobre escribir RFCs"}]