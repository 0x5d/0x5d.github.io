<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>0x5d</title><link>https://blog.0x5d.io/</link><description>Recent content on 0x5d</description><generator>Hugo -- 0.140.2</generator><language>en</language><lastBuildDate>Sat, 16 Nov 2024 20:19:47 -0500</lastBuildDate><atom:link href="https://blog.0x5d.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust Adventures: External Sort, Chapter 1</title><link>https://blog.0x5d.io/posts/ext-sort/</link><pubDate>Sat, 16 Nov 2024 20:19:47 -0500</pubDate><guid>https://blog.0x5d.io/posts/ext-sort/</guid><description>&lt;p>I&amp;rsquo;ve been learning Rust in my free time for the last 6 months. I read The Book and I&amp;rsquo;m in the middle of reading Rust for Rustaceans (&lt;a href="https://blog.0x5d.io/posts/rust-for-rustaceans/" target="_blank" >my notes so far&lt;/a>
), but after doing a couple of very small exercises and projects I wanted to do something more &lt;em>rusty&lt;/em>.&lt;/p>
&lt;p>So on Sundays, in between espressos and with very good company, I started writing an external sort.&lt;/p>
&lt;p>This is the 1st post in a series, where I cover the code that generates the data to be sorted. Stay tuned for the next one!&lt;/p></description></item><item><title>Notes on Rust For Rustaceans, Pt. 1</title><link>https://blog.0x5d.io/posts/rust-for-rustaceans/</link><pubDate>Sat, 22 Jun 2024 20:19:47 -0500</pubDate><guid>https://blog.0x5d.io/posts/rust-for-rustaceans/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>I&amp;rsquo;m really enjoying reading &lt;a href="https://x.com/jonhoo" target="_blank" >Jon Gjenset&lt;/a>
&amp;rsquo;s &lt;a href="https://rust-for-rustaceans.com/" target="_blank" >Rust for Rustaceans&lt;/a>
. I appreciated the author&amp;rsquo;s decision to assume his target audience to be people who had just finished &lt;a href="https://doc.rust-lang.org/book/title-page.html" target="_blank" >The Book&lt;/a>
, making it sort of an expansion or a Level II.&lt;/p>
&lt;p>However, I found it light on contrasting examples, as well as images. I&amp;rsquo;m more of a visual learner, so I find them very useful to understand what&amp;rsquo;s right (or wrong), or to help me create a mental model of a concept being described.&lt;/p></description></item><item><title>On writing RFCs</title><link>https://blog.0x5d.io/posts/rfcs/</link><pubDate>Sun, 12 Mar 2023 15:33:47 -0500</pubDate><guid>https://blog.0x5d.io/posts/rfcs/</guid><description>&lt;p>I&amp;rsquo;ll write the post I wish I&amp;rsquo;d read before I started writing RFCs at work. I&amp;rsquo;ll start by providing some motivation for RFCs, then go over my &lt;em>current&lt;/em> process for writing them and provide a &lt;a href="https://github.com/0x5d/0x5d.github.io/blob/main/content/posts/rfcs/files/rfc-template.md" target="_blank" >template&lt;/a>
that you can use.&lt;/p>
&lt;p>This post isn&amp;rsquo;t by any means a formal specification for writing RFCs. If anything, it&amp;rsquo;s a loose framework I&amp;rsquo;ve found helpful over the past couple of years. I&amp;rsquo;m also writing this as a reference for myself in the future, but I hope it&amp;rsquo;ll be valuable for you too. It took me a while to appreciate the value of RFCs, but now I consider them one of the helpful tools I use regularly. If you&amp;rsquo;re an RFCs veteran, maybe this will give you a different perspective on them, and if you have tips, please share them! If you&amp;rsquo;ve never written an RFC, I hope when you&amp;rsquo;re finished reading this post you&amp;rsquo;ll feel confident enough to invest the time in one next time you get the chance.&lt;/p></description></item></channel></rss>